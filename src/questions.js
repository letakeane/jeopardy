const questions = {
  frontend: {
    200: [
      "What are some core principles of functional programming?",
      "What makes a function pure?",
      "What is the purpose of a return statment in a function?",
      "What’s the difference between undefined and null?",
      "How is an array different from an object?",
      "Give an example of a self-closing HTML tag.",
      "Why is it important to use semantic HTML tags?",
      "What is the difference between a block HTML element, and an inline HTML element?",
    ],
    400: [
      "What is immutability?",
      "What is a higher order function?",
      "What are some benefits of functional programming?",
      "What is a closure, and how/why would you use one?",
      "Explain the concept of hoisting.",
      "Explain the concept of event delegation.",
      "What is a promise and why is it helpful?",
      "What is block scope and how is it different from global and local scope?",
      "What’s the difference between let and const?",
      "What is the concept of state in React?",
      "What is JSX?",
      "Can you describe what responsive design is to you and how you would implement it?",
    ],
    600: [
      "What is the ‘this’ keyword in JavaScript?",
      "Why is it, in general, a good idea to leave the global scope of a website as-is and never touch it?",
      "How would you find all the values for a specific key in an array of objects?",
      "What are some tools and strategies you use to prevent shipping unstable code to production?",
      "What is the DOM? How is the virtual dom different?",
      "What advantages does React offer? What about disadvantages?",
      "What's your experience with React Hooks?",
    ],
    800: [
      "What is the event loop?",
      "What is 'chaining' in JavaScript?",
      "What does CORS stand for and what issue does it address?",
      "In as much detail as possible, describe the request-response cycle.",
      "What is the difference between unit, integration, and acceptance-level testing? Can you talk about times when you’ve done each?",
    ],
    1000: [
      "What is function composition?",
      "What is currying?",
      "What is memoization and how can it improve the performance of a function?",
      "What is 'use strict'? What are the advantages and disadvantages to using it?",
      "Define the term ‘MVC’ and explain how an application is architected when following MVC patterns.",
      "What factors influence whether you’ll take a progressive enhancement vs. graceful degradation approach to building an application?",
    ],
  },
  backend: {
    200: [
      "What is the difference between Array#map and Array#each?",
      "Name 4 ruby enumerables excluding each and map and give a brief example of what’s unique about each.",
      "What is TDD?",
      "Tell me two advantages of testing your code.",
      "What is yield in Ruby? What is it useful for? Give an example of where you would put it.",
      "What is Rails?",
    ],
    400: [
      "What is HTTP and give a brief definition?",
      "What are three tools or strategies you use to prevent shipping unstable code to production?",
      "What does API stand for and how do you define it?",
      "My production and development environments are using large sets of data. What are some ways to optimize my tests to run quickly, but be thorough?",
      "An enumerable by any other name still behaves the same. Give the other name for these 3 Ruby enumerables Detect, Select, Collect.",
      "There are only 2 values in Ruby that evaluate to false - what are they?",
    ],
    600: [
      "In as much detail as possible, describe the request-response cycle.",
      "What are a few ways to optimize a Rails application?",
      "What’s a background worker? When would we want to use a background worker?",
      "What’s the difference between authentication and authorization? What tools have you used to set up auth in the past?",
      "What is a Mock vs. a Stub in testing? When would you use each?",
      "Describe what an MVC architecture is.",
      "Explain to me the general meaning behind each series of error codes (ex. 200’s, 300’s, 400’s, 500’s).",
      "What are some key differences between relational and non-relational databases?",
    ],
    800: [
      "What’s a module in Ruby? What’s the difference between a class and a module? What are some good use cases for modules?",
      "What’s the difference between a session and a cookie?",
      "Explain a git merge workflow vs a git rebase workflow",
      "What does it mean to compile code?",
      "Describe each of the four fundamental concepts of object-oriented programming. How would you implement each of these in your code?",
      "What does CORS stand for and what issue does it address?",
      "Explain as much as you can about RESTful APIs.",
    ],
    1000: [
      "In as much detail as possible, describe DNS.",
      "In as much detail as possible, tell me about JSON Web Tokens.",
      "Describe what an SOA (Service Oriented Archicture) application is and looks like? What are the benefits and drawbacks?",
      "What are strategies you have taken in order to optimize database queries?",
    ],
  },
  behavioral: {
    200: [
      "Tell me about yourself.",
      "What project of yours are you most proud of and why?",
      "In your experience, what are some of the pros and cons of working solo and of working collaboratively in a team?",
      "Describe a time when you saw some problem and took the initiative to correct it rather than waiting for someone else to do it.",
      "What are some of your go-to strategies for debugging an error?",
    ],
    400: [
      "What has your experience working in teams been like?",
      "Describe an example of how you have handled a stressful situation.",
      "Explain one of the most difficult code problems you’ve had to solve, either on your own authored code, or in contributing to someone else’s.",
      "Tell me about a time when you had to rely on written communication to get your ideas across to your team.",
      "Tell me about your learning process: what helps you do your best learning?",
    ],
    600: [
      "How do you familiarize yourself with a codebase you haven’t worked in before?",
      "Have you ever had to switch gears in the middle of a project to get something fixed immediately? How did you react?",
      "How would you define 'good communication' in a team? What are some of the hallmarks of a team that communicates well?",
      "Give me an example of a time you were able to be creative with your work. What was exciting or difficult about it?",
      "How would your classmates describe you?",
    ],
    800: [
      "A lot of this job will be full-stack. Your experience is largely [Back End/Front End]. How would you approach the challenge of getting up to speed with a new language and contributing to the codebase?",
      "Describe a time when you received feedback that you were surprised by. What did you do with that feedback?",
      "Tell me about a time you failed. How did you deal with the situation?",
      "It looks like this would be your first job as a developer. How did you learn the skills needed to do this work?",
    ],
    1000: [
      "Tell me about a time you had a disagreement with a colleague and how you resolved it.",
      "Describe a project that failed, a project you had to give up on or a time you worked really hard on a project and it just didn’t pan out as expected. What happened? How did you make the decisions that you made?",
      "What are some of your strengths, and what are some of your weaknesses (or areas for growth)?",
      "Why should I hire you?",
    ],
  },
};

export default questions;